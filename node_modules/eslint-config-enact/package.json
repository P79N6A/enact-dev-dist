{
  "_args": [
    [
      {
        "raw": "eslint-config-enact@github:enyojs/eslint-config-enact#1.1.2",
        "scope": null,
        "escapedName": "eslint-config-enact",
        "name": "eslint-config-enact",
        "rawSpec": "github:enyojs/eslint-config-enact#1.1.2",
        "spec": "github:enyojs/eslint-config-enact#1.1.2",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:enyojs/eslint-config-enact.git#1.1.2",
          "sshUrl": "git+ssh://git@github.com/enyojs/eslint-config-enact.git#1.1.2",
          "httpsUrl": "git+https://github.com/enyojs/eslint-config-enact.git#1.1.2",
          "gitUrl": "git://github.com/enyojs/eslint-config-enact.git#1.1.2",
          "shortcut": "github:enyojs/eslint-config-enact#1.1.2",
          "directUrl": "https://raw.githubusercontent.com/enyojs/eslint-config-enact/1.1.2/package.json"
        }
      },
      "/home/lguser/git/enact-dev"
    ]
  ],
  "_from": "enyojs/eslint-config-enact#1.1.2",
  "_id": "eslint-config-enact@1.1.2",
  "_inCache": true,
  "_location": "/eslint-config-enact",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-config-enact@github:enyojs/eslint-config-enact#1.1.2",
    "scope": null,
    "escapedName": "eslint-config-enact",
    "name": "eslint-config-enact",
    "rawSpec": "github:enyojs/eslint-config-enact#1.1.2",
    "spec": "github:enyojs/eslint-config-enact#1.1.2",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:enyojs/eslint-config-enact.git#1.1.2",
      "sshUrl": "git+ssh://git@github.com/enyojs/eslint-config-enact.git#1.1.2",
      "httpsUrl": "git+https://github.com/enyojs/eslint-config-enact.git#1.1.2",
      "gitUrl": "git://github.com/enyojs/eslint-config-enact.git#1.1.2",
      "shortcut": "github:enyojs/eslint-config-enact#1.1.2",
      "directUrl": "https://raw.githubusercontent.com/enyojs/eslint-config-enact/1.1.2/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/enyojs/eslint-config-enact.git#ee250937fff030895cd7a7a6989e273c23d8fa98",
  "_shasum": "985a6885d8ddf24358eb7cfddb0045eda33b1475",
  "_shrinkwrap": null,
  "_spec": "eslint-config-enact@github:enyojs/eslint-config-enact#1.1.2",
  "_where": "/home/lguser/git/enact-dev",
  "author": "",
  "bugs": {
    "url": "https://github.com/enyojs/eslint-config-enact/issues"
  },
  "dependencies": {},
  "description": "ESLint config for Enact",
  "devDependencies": {},
  "gitHead": "ee250937fff030895cd7a7a6989e273c23d8fa98",
  "homepage": "https://github.com/enyojs/eslint-config-enact#readme",
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "eslint-config-enact",
  "optionalDependencies": {},
  "readme": "# Linting with ESLint\n\nThe Enact team recommends all developers use ESLint to statically analyze files for potential errors and to help enforce a common coding style.  To that end, we developed an ESLint plugin that encapsulates Enact programming conventions.  Most modern editors have support for displaying linter errors in-line with source code.  This can be very helpful during development.  This document describes how to set up ESLint with various editors.\n\n## Installing Dependencies\n\nESLint, and some of the support modules, must be available globally for editors.  Install these dependencies with the following command:\n\n```bash\nnpm install -g eslint eslint-plugin-react eslint-plugin-babel babel-eslint enyojs/eslint-plugin-enact enyojs/eslint-config-enact\n```\n\nOr alternatively:\n\n```bash\nnpm install -g eslint eslint-plugin-react eslint-plugin-babel babel-eslint enyojs/eslint-plugin-enact\ngit clone git@github.com:enyojs/eslint-config-enact.git\ncd eslint-config-enact\nnpm link\n```\n\n> Some Linux installations may require the use of `sudo`, though we recommend updating your installation to not require this.  If your Mac OS X installation requires this, you should definitely reinstall node.  Consider using [nvm](https://github.com/creationix/nvm) or another similar tool to manage your node installation.\n\n<!-- -->\n>NOTE: You may see the following warnings, which you can safely ignore:\n>\n>```npm WARN eslint-config-enact@1.0.0 requires a peer of eslint@^2.10.2 but none was installed.\n>npm WARN eslint-config-enact@1.0.0 requires a peer of eslint-plugin-react@^5.1.1 but none was installed.\n>npm WARN eslint-config-enact@1.0.0 requires a peer of eslint-plugin-babel@^3.2.0 but none was installed.```\n\n\n## Setting Up Your Editor\n\nEach editor requires a slightly different setup.  Jump to the section relevant to your editor.\n\n>Note: If you happen to have linting set up already using JSHint or another tool, be sure to disable it as these linters sometimes get confused with newer ES6+ syntax and will not take advantage of the Enact linting rules.\n\n### Atom\n\nFrom the shell/command prompt, issue the following command to install [linter-eslint](https://github.com/AtomLinter/linter-eslint):\n\n```\napm install linter-eslint\n```\n\nAfter the installation go to *Preferences*, then click on *Packages*. Navigate down to *linter-eslint* and click *Settings*. Make sure that the *Use global ESLint installation* option is checked and that you have correctly configured the path to the node installation within Atom.\n\n### Sublime Text\n\nInstall the [SublimeLinter-eslint plugin](https://github.com/roadhump/SublimeLinter-eslint), which depends on [SublimeLinter 3](http://sublimelinter.readthedocs.org/en/latest/installation.html).\n\n### Vim\n\nFirst install [Syntastic](https://github.com/scrooloose/syntastic) and then enable the eslint option:\n\n```vimscript\n\" syntastic\nlet g:syntastic_javascript_checkers = ['eslint']\nlet g:syntastic_always_populate_loc_list = 1\nlet g:syntastic_auto_loc_list = 0\nlet g:syntastic_check_on_open = 1\nlet g:syntastic_check_on_wq = 0\nlet g:syntastic_mode_map = {\n        \\ \"mode\": \"active\",\n        \\ \"active_filetypes\": [\"javascript\"]}\n```\n\nUnfortunately, Syntastic does not support real-time linting and only lints on save/load.\n\n> Note: You may also wish to install [vim-jsx](https://github.com/mxw/vim-jsx) as well.\n\n### Visual Studio Code\n\nInstall the [vscode-eslint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint) plugin.  More information on linters and Visual Studio Code can be found [here](https://code.visualstudio.com/docs/languages/javascript#_linters).\n\n### WebStorm\n\nIn either the default or per-project preferences, go to *Languages & Frameworks* > *JavaScript* > *Code Quality* > *ESLint*.\nCheck the *Enable* checkbox.  Ensure that the proper paths for `node` and `eslint` are configured.\n\n## Next Steps\n\nIf in-editor linting is not working in your local project, you may need to add the following to your `package.json`:\n\n```\n{\n  // ...\n  \"eslintConfig\": {\n    \"extends\": \"enact\"\n  }\n}\n```\n\nIf you like our linting rules and want to use them by default with your other projects, set up an `.eslintrc` file in your HOME directory as follows:\n\n```\n{\n  \"extends\": \"enact\"\n}\n```\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/enyojs/eslint-config-enact.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.2"
}
